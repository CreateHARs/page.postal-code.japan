name: "[cron] auto create PR"

on:
  schedule: # UTC
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  main:
    name    : run main
    runs-on : ubuntu-latest
    timeout-minutes : 120
    steps   :

      - name  : "[STEP] Checkout repository"
        uses  : actions/checkout@v2
        with  :
          ref   : main
          token : ${{ secrets.ACTIONS_CHAIN_FLOW_PAT }}

      - name  : "[STEP] Setup Config"
        env   :
          TZ    : 'Asia/Tokyo'
        run   : |
          echo "CURRENT_DATETIME=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV
          echo "setup a user for commit/push."
          git config --local user.name  github-actions
          git config --local user.email github-actions@github.com

      - name  : "[STEP] Setup Python"
        uses  : actions/setup-python@v2
        with  :
          python-version : '2.7.18'
          architecture   : 'x64'

      - name  : "[STEP] Run Python"
        id    : step-python
        run   : |
          cd scripts/python
          python -V
          pip install -r requirements.txt
          python -B src/main.py

      - name  : "[STEP] Check Changes"
        id    : step-check-changes
        run   : |
          git add -N .
          git_diff_count=`git diff --name-only | wc -l`
          echo "git_diff_count: ${git_diff_count}"
          echo "::set-output name=git-diff-count::${git_diff_count}"

      - name  : "[STEP] Create New Branch/PR"
        if    : steps.step-check-changes.outputs.git-diff-count > 0
        env   :
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN : ${{ secrets.ACTIONS_CHAIN_FLOW_PAT }}
        run   : |
          release_branch="actions/cron_auto-pr_${{ env.CURRENT_DATETIME }}"
          echo `git branch --contains`
          git switch -c      ${release_branch}
          git push -u origin ${release_branch}
          echo `git branch --contains`

          git add .
          git commit -m "auto updated."
          git push

          #  hub pull-request --base main --head ${release_branch} -m "[release] ${{ env.CURRENT_DATETIME }}"
          gh pr create --base main --title "[release] ${{ env.CURRENT_DATETIME }}" 

